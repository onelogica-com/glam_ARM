{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.9.1.41621",
            "templateHash": "2637152180661081755"
        }
    },
    "parameters": {
        "ResourcePrefix": {
            "type": "string",
            "metadata": {
                "description": "provide a 2-13 character prefix for all resources."
            }
        },
        "Location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "StorageAccountName": {
            "type": "string",
            "defaultValue": "[format('{0}str', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "Name of Storage Account"
            }
        },
        "OpenaiAccountName": {
            "type": "String",
            "defaultValue": "[format('{0}oai', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "Name of OpenAi Account"
            }
        },
        "AzureOpenAIGPTModel": {
            "type": "string",
            "defaultValue": "gpt-35-turbo",
            "metadata": {
                "description": "Azure OpenAI GPT Model Deployment Name"
            }
        },
        "AzureOpenAIGPTModelName": {
            "type": "string",
            "defaultValue": "gpt-35-turbo",
            "metadata": {
                "description": "Azure OpenAI GPT Model Name"
            }
        },
        "AzureOpenAIGPTModelVersion": {
            "type": "string",
            "defaultValue": "0613",
            "metadata": {
                "description": "Azure OpenAI GPT Model Version"
            }
        },
        "AzureOpenAIGPTModel16k": {
            "type": "string",
            "defaultValue": "gpt-35-turbo-16k",
            "metadata": {
                "description": "Azure OpenAI 2nd GPT Model Deployment Name"
            }
        },
        "AzureOpenAIGPTModelName16k": {
            "type": "string",
            "defaultValue": "gpt-35-turbo-16k",
            "metadata": {
                "description": "Azure OpenAI 2nd GPT Model Name"
            }
        },
        "AzureOpenAIGPTModelVersion16k": {
            "type": "string",
            "defaultValue": "0613",
            "metadata": {
                "description": "Azure OpenAI 2nd GPT Model Version"
            }
        },
        "AzureOpenAIGPT4Model": {
            "type": "string",
            "defaultValue": "gpt-4-32k",
            "metadata": {
                "description": "Azure OpenAI  GPT 4 Model Deployment Name"
            }
        },
        "AzureOpenAIGPT4ModelName": {
            "type": "string",
            "defaultValue": "gpt-4-32k",
            "metadata": {
                "description": "Azure OpenAI  GPT 4 Model Name"
            }
        },
        "AzureOpenAIGPT4ModelVersion": {
            "type": "string",
            "defaultValue": "0613",
            "metadata": {
                "description": "Azure OpenAI GPT 4 Model Version"
            }
        },
        "AzureOpenAIEmbeddingModel": {
            "type": "string",
            "defaultValue": "text-embedding-ada-002",
            "metadata": {
                "description": "Azure OpenAI Embedding Model Deployment Name"
            }
        },
        "AzureOpenAIEmbeddingModelName": {
            "type": "string",
            "defaultValue": "text-embedding-ada-002",
            "metadata": {
                "description": "Azure OpenAI GPT Model Name"
            }
        },
        "AzureOpenAIEmbeddingModelVersion": {
            "type": "string",
            "defaultValue": "2",
            "metadata": {
                "description": "Azure OpenAI GPT Model Version"
            }
        },
        "AzureTranslatorAccountName": {
            // "defaultValue": "glamdoctranslator",
            "defaultValue": "[format('{0}aztranslator', parameters('ResourcePrefix'))]",
            "type": "String",
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
        "ContentmoderatorAcountName": {
            // "defaultValue": "contentmoderatorglam",
            "defaultValue": "[format('{0}ContentModerator', parameters('ResourcePrefix'))]",
            "type": "String",
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
         "TextAnalyticsAccountName": {
            // "defaultValue": "textanalyticsvach",
            "defaultValue": "[format('{0}aztextanalytics', parameters('ResourcePrefix'))]",
            "type": "String",
             "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
         "SearchServicesAccountName": {
            // "defaultValue": "glamsearchservice",
           "defaultValue": "[format('{0}azsearchservice', parameters('ResourcePrefix'))]",
            "type": "String",
              "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
         "AzureCognitiveSearchSku": {
        "type": "string",
        "defaultValue": "standard",
        "allowedValues": [
          "free",
          "basic",
          "standard",
          "standard2",
          "standard3"
        ],
        "metadata": {
          "description": "The SKU of the search service you want to create. E.g. free or standard"
        }
      },
      "serverName": {
      "type": "string",
      "metadata": {
        "description": "Server Name for Azure database for PostgreSQL"
      }
    },
    "administratorLogin": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Database administrator login name"
      }
    },
    "administratorLoginPassword": {
      "type": "securestring",
      "minLength": 8,
      "metadata": {
        "description": "Database administrator password"
      }
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Azure database for PostgreSQL compute capacity in vCores (2,4,8,16,32)"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "metadata": {
        "description": "Azure database for PostgreSQL sku name "
      }
    },
    "skuSizeMB": {
      "type": "int",
      "defaultValue": 51200,
      "metadata": {
        "description": "Azure database for PostgreSQL Sku Size "
      }
    },
    "skuTier": {
      "type": "string",
      "defaultValue": "Burstable",
      "metadata": {
        "description": "Azure database for PostgreSQL pricing tier"
      }
    },
    "skuFamily": {
      "type": "string",
      "defaultValue": "Gen5",
      "metadata": {
        "description": "Azure database for PostgreSQL sku family"
      }
    },
     "postgresqlVersion": {
      "type": "string",
      "defaultValue": "15",
      "allowedValues": [
        "16",
        "15",
        "14",
        "13",
        "12",
        "11"
      ],
      "metadata": {
        "description": "PostgreSQL version"
      }
    },
    "locationReplica": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for replica database."
      }
    },
    "backupRetentionDays": {
      "type": "int",
      "defaultValue": 7,
      "metadata": {
        "description": "PostgreSQL Server backup retention days"
      }
    },
    "geoRedundantBackup": {
      "type": "string",
      "defaultValue": "Disabled",
      "metadata": {
        "description": "Geo-Redundant Backup setting"
      }
    },
       "WebsiteName": {
        "type": "string",
        "defaultValue": "[format('{0}-website', parameters('ResourcePrefix'))]",
        "metadata": {
          "description": "Name of Web App"
        }
      },
       "HostingPlanName": {
        "type": "string",
        "defaultValue": "[format('{0}-hosting-plan', parameters('ResourcePrefix'))]",
        "metadata": {
          "description": "Name of App Service plan"
        }
      },
       "HostingPlanSku": {
        "type": "string",
        "defaultValue": "B3",
        "allowedValues": [
          "F1",
          "D1",
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P1",
          "P2",
          "P3",
          "P4"
        ],
        "metadata": {
          "description": "The pricing tier for the App Service plan"
        }
      }
        // "searchServices_textanalyticsvach_as36vn4dlyuy47k_externalid": {
        //     "defaultValue": "/subscriptions/f4e709ca-ccb8-4e46-b0b0-822db3762d86/resourceGroups/vach_onelogica/providers/Microsoft.Search/searchServices/textanalyticsvach-as36vn4dlyuy47k",
        //     "type": "String"
        // }
        // "AzureOpenAITemperature": {
        //     "type": "string",
        //     "defaultValue": "0",
        //     "metadata": {
        //         "description": "Azure OpenAI Temperature"
        //     }
        // },
        // "AzureOpenAITopP": {
        //     "type": "string",
        //     "defaultValue": "1",
        //     "metadata": {
        //         "description": "Azure OpenAI Top P"
        //     }
        // },
        // "AzureOpenAIMaxTokens": {
        //     "type": "string",
        //     "defaultValue": "1000",
        //     "metadata": {
        //         "description": "Azure OpenAI Max Tokens"
        //     }
        // },
        // "AzureOpenAIStopSequence": {
        //     "type": "string",
        //     "defaultValue": "\n",
        //     "metadata": {
        //         "description": "Azure OpenAI Stop Sequence"
        //     }
        // },
        // "AzureOpenAISystemMessage": {
        //     "type": "string",
        //     "defaultValue": "You are an AI assistant that helps people find information.",
        //     "metadata": {
        //         "description": "Azure OpenAI System Message"
        //     }
        // },
        // "AzureOpenAIApiVersion": {
        //     "type": "string",
        //     "defaultValue": "2023-07-01-preview",
        //     "metadata": {
        //         "description": "Azure OpenAI Api Version"
        //     }
        // },
        // "AzureOpenAIStream": {
        //     "type": "string",
        //     "defaultValue": "true",
        //     "metadata": {
        //         "description": "Whether or not to stream responses from Azure OpenAI"
        //     }
        // }
    },
    "variables": {
        "BlobContainerName": "glamdocuments",
        "OpenAiName": "glam_openai",
        "WebAppImageName": "DOCKER|glamacr.azurecr.io/glamlatestdeployforweb:1.3"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[parameters('StorageAccountName')]",
            "location": "[parameters('Location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },


        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/{1}', parameters('StorageAccountName'), 'default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default/{1}', parameters('StorageAccountName'), variables('BlobContainerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',  parameters('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "none"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default/config', parameters('StorageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/{1}/{2}', parameters('StorageAccountName'), 'default', 'doc-processing')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('OpenaiAccountName')]",
            "location": "FRANCECENTRAL",
            "kind": "OpenAI",
            "sku": {
                "name": "S0"
            },
            "properties": {
                "customSubDomainName": "[parameters('OpenaiAccountName')]"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}', parameters('OpenaiAccountName'), parameters('AzureOpenAIGPTModelName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('OpenaiAccountName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": 120
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPTModel')]",
                    "version": "[parameters('AzureOpenAIGPTModelVersion')]"
                }
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}',parameters('OpenaiAccountName'),parameters('AzureOpenAIGPTModelName16k'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('OpenaiAccountName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": 120
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPTModel16k')]",
                    "version": "[parameters('AzureOpenAIGPTModelVersion16k')]"
                }
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}',parameters('OpenaiAccountName'),parameters('AzureOpenAIGPT4ModelName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('OpenaiAccountName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": 10
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPT4Model')]",
                    "version": "[parameters('AzureOpenAIGPT4ModelVersion')]"
                }
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}', parameters('OpenaiAccountName'), parameters('AzureOpenAIEmbeddingModelName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('OpenaiAccountName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('OpenaiAccountName'), parameters('AzureOpenAIGPTModelName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": 120
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIEmbeddingModel')]",
                    "version": "[parameters('AzureOpenAIEmbeddingModelVersion')]"
                }
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('AzureTranslatorAccountName')]",
            "location": "[parameters('Location')]",
            "sku": {
                "name": "S1"
            },
            "kind": "TextTranslation",
            "identity": {
                "type": "None"
            },
            "properties": {
                "customSubDomainName": "[parameters('AzureTranslatorAccountName')]",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('ContentmoderatorAcountName')]",
            "location": "[parameters('Location')]",
            "sku": {
                "name": "S0"
            },
            "kind": "ContentModerator",
            "identity": {
                "type": "None"
            },
            "properties": {
                "customSubDomainName": "[parameters('ContentmoderatorAcountName')]",
                "publicNetworkAccess": "Enabled"
            }
        },
          {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('TextAnalyticsAccountName')]",
            "location": "[parameters('Location')]",
            "sku": {
                "name": "S"
            },
            "kind": "TextAnalytics",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "publicNetworkAccess": "Enabled"
            }
        },
         {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2023-11-01",
            "name": "[parameters('SearchServicesAccountName')]",
             "location": "[parameters('Location')]",
            "tags": {
                "ProjectType": "aoai-your-data-service"
            },
            "sku": {
                "name": "[parameters('AzureCognitiveSearchSku')]"
            },
            "properties": {
                "replicaCount": 1,
                "partitionCount": 1
                }
            
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2023-06-01-preview",
            "name": "[parameters('serverName')]",
            "location": "[parameters('Location')]",
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "Burstable"
            },
            "properties": {
                "replica": {
                    "role": "Primary"
                },
                "storage": {
                    "iops": 120,
                    "tier": "P4",
                    "storageSizeGB": 32
                },
                 "network": {
                    "publicNetworkAccess": "Enabled"
                },
                
                "version": "[parameters('postgresqlVersion')]",
                "administratorLogin":  "[parameters('administratorLogin')]",
                "availabilityZone": "1",
                "backup": {
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled"
                },
                "replicationRole": "Primary"
            }
        },

        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2023-06-01-preview",
            "name": "[concat(parameters('serverName'), '/anshupal')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
        
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2023-06-01-preview",
            "name": "[concat(parameters('serverName'), '/postgres')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
              {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2020-06-01",
        "name": "[parameters('HostingPlanName')]",
        "location": "[parameters('Location')]",
        "sku": {
          "name": "[parameters('HostingPlanSku')]"
        },
        "properties": {
          "reserved": true
        },
        "kind": "linux"
      },
         {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2020-06-01",
        "name": "[parameters('WebsiteName')]",
        "location": "[parameters('Location')]",
        "properties": {
          "serverFarmId": "[parameters('HostingPlanName')]",
          "siteConfig": {
            // "appSettings": [
            //   {
            //     "name": "APPINSIGHTS_CONNECTION_STRING",
            //     "value": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').ConnectionString]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_SERVICE",
            //     "value": "[format('https://{0}.search.windows.net', parameters('AzureCognitiveSearch'))]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_INDEX",
            //     "value": "[parameters('AzureSearchIndex')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_CONVERSATIONS_LOG_INDEX",
            //     "value": "[parameters('AzureSearchConversationLogIndex')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_KEY",
            //     "value": "[listAdminKeys(format('Microsoft.Search/searchServices/{0}', parameters('AzureCognitiveSearch')), '2021-04-01-preview').primaryKey]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG",
            //     "value": "[parameters('AzureSearchSemanticSearchConfig')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_INDEX_IS_PRECHUNKED",
            //     "value": "[parameters('AzureSearchIndexIsPrechunked')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_TOP_K",
            //     "value": "[parameters('AzureSearchTopK')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_ENABLE_IN_DOMAIN",
            //     "value": "[parameters('AzureSearchEnableInDomain')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_CONTENT_COLUMNS",
            //     "value": "[parameters('AzureSearchContentColumns')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_FILENAME_COLUMN",
            //     "value": "[parameters('AzureSearchFilenameColumn')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_TITLE_COLUMN",
            //     "value": "[parameters('AzureSearchTitleColumn')]"
            //   },
            //   {
            //     "name": "AZURE_SEARCH_URL_COLUMN",
            //     "value": "[parameters('AzureSearchUrlColumn')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_RESOURCE",
            //     "value": "[parameters('AzureOpenAIResource')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_KEY",
            //     "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource')), '2023-05-01').key1]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_MODEL",
            //     "value": "[parameters('AzureOpenAIGPTModel')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_MODEL_NAME",
            //     "value": "[parameters('AzureOpenAIGPTModelName')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_TEMPERATURE",
            //     "value": "[parameters('AzureOpenAITemperature')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_TOP_P",
            //     "value": "[parameters('AzureOpenAITopP')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_MAX_TOKENS",
            //     "value": "[parameters('AzureOpenAIMaxTokens')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_STOP_SEQUENCE",
            //     "value": "[parameters('AzureOpenAIStopSequence')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_SYSTEM_MESSAGE",
            //     "value": "[parameters('AzureOpenAISystemMessage')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_API_VERSION",
            //     "value": "[parameters('AzureOpenAIApiVersion')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_STREAM",
            //     "value": "[parameters('AzureOpenAIStream')]"
            //   },
            //   {
            //     "name": "AZURE_OPENAI_EMBEDDING_MODEL",
            //     "value": "[parameters('AzureOpenAIEmbeddingModel')]"
            //   },
            //   {
            //     "name": "AZURE_FORM_RECOGNIZER_ENDPOINT",
            //     "value": "[format('https://{0}.api.cognitive.microsoft.com/', parameters('Location'))]"
            //   },
            //   {
            //     "name": "AZURE_FORM_RECOGNIZER_KEY",
            //     "value": "[listKeys(format('Microsoft.CognitiveServices/accounts/{0}', parameters('FormRecognizerName')), '2023-05-01').key1]"
            //   },
            //   {
            //     "name": "AZURE_BLOB_ACCOUNT_NAME",
            //     "value": "[parameters('StorageAccountName')]"
            //   },
            //   {
            //     "name": "AZURE_BLOB_ACCOUNT_KEY",
            //     "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2019-06-01').keys[0].value]"
            //   },
            //   {
            //     "name": "AZURE_BLOB_CONTAINER_NAME",
            //     "value": "[variables('BlobContainerName')]"
            //   },
            //   {
            //     "name": "ORCHESTRATION_STRATEGY",
            //     "value": "[parameters('OrchestrationStrategy')]"
            //   },
            //   {
            //     "name": "AZURE_CONTENT_SAFETY_ENDPOINT",
            //     "value": "[format('https://{0}.api.cognitive.microsoft.com/', parameters('Location'))]"
            //   },
            //   {
            //     "name": "AZURE_CONTENT_SAFETY_KEY",
            //     "value": "[listKeys(format('Microsoft.CognitiveServices/accounts/{0}', parameters('ContentSafetyName')), '2023-05-01').key1]"
            //   },
            //   {
            //     "name": "AZURE_SPEECH_SERVICE_NAME",
            //     "value": "[parameters('SpeechServiceName')]"
            //   },
            //   {
            //     "name": "AZURE_SPEECH_SERVICE_KEY",
            //     "value": "[listKeys(format('Microsoft.CognitiveServices/accounts/{0}', parameters('SpeechServiceName')), '2023-05-01').key1]"
            //   },
            //   {
            //     "name": "AZURE_SPEECH_SERVICE_REGION",
            //     "value": "[parameters('Location')]"
            //   }
            // ],
            "linuxFxVersion": "[variables('WebAppImageName')]"
          }
        },
        "dependsOn": [
        //   "[resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName'))]",
        //   "[resourceId('Microsoft.Web/serverfarms', parameters('HostingPlanName'))]"
        //   "[resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource'))]",
        //   "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
        ]
      }
        

    ]
}