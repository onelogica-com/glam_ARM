{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.9.1.41621",
            "templateHash": "2637152180661081755"
        }
    },
    "parameters": {
        "ResourcePrefix": {
            "type": "string",
            "metadata": {
                "description": "provide a 2-13 character prefix for all resources."
            }
        },
        "Location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "StorageAccountName": {
            "type": "string",
            "defaultValue": "[format('{0}str', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "Name of Storage Account"
            }
        },
        "OpenaiAccountName": {
            "type": "String",
            "defaultValue": "[format('{0}oai', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "Name of OpenAi Account"
            }
        },
        "AzureOpenAIGPTModel": {
            "type": "string",
            "defaultValue": "gpt-35-turbo",
            "metadata": {
                "description": "Azure OpenAI GPT Model Deployment Name"
            }
        },
        "AzureOpenAIGPTModelName": {
            "type": "string",
            "defaultValue": "gpt-35-turbo",
            "metadata": {
                "description": "Azure OpenAI GPT Model Name"
            }
        },
        "AzureOpenAIGPTModelName_capatity": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Azure OpenAI GPT Model Name"
            }
        },
        "AzureOpenAIGPTModelVersion": {
            "type": "string",
            "defaultValue": "0613",
            "metadata": {
                "description": "Azure OpenAI GPT Model Version"
            }
        },
        "AzureOpenAIGPTModel16k": {
            "type": "string",
            "defaultValue": "gpt-35-turbo-16k",
            "metadata": {
                "description": "Azure OpenAI 2nd GPT Model Deployment Name"
            }
        },
        "AzureOpenAIGPTModelName16k": {
            "type": "string",
            "defaultValue": "gpt-35-turbo-16k",
            "metadata": {
                "description": "Azure OpenAI 2nd GPT Model Name"
            }
        },
        "AzureOpenAIGPTModelName16k_capatity": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Azure OpenAI 2nd GPT Model Name"
            }
        },
        "AzureOpenAIGPTModelVersion16k": {
            "type": "string",
            "defaultValue": "0613",
            "metadata": {
                "description": "Azure OpenAI 2nd GPT Model Version"
            }
        },
        "AzureOpenAIGPT4Model": {
            "type": "string",
            "defaultValue": "gpt-4-32k",
            "metadata": {
                "description": "Azure OpenAI  GPT 4 Model Deployment Name"
            }
        },
        "AzureOpenAIGPT4ModelName": {
            "type": "string",
            "defaultValue": "gpt-4-32k",
            "metadata": {
                "description": "Azure OpenAI  GPT 4 Model Name"
            }
        },
        "AzureOpenAIGPT4ModelName_capatity": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Azure OpenAI  GPT 4 Model Name"
            }
        },
        "AzureOpenAIGPT4ModelVersion": {
            "type": "string",
            "defaultValue": "0613",
            "metadata": {
                "description": "Azure OpenAI GPT 4 Model Version"
            }
        },
        "AzureOpenAIEmbeddingModel": {
            "type": "string",
            "defaultValue": "text-embedding-ada-002",
            "metadata": {
                "description": "Azure OpenAI Embedding Model Deployment Name"
            }
        },
        "AzureOpenAIEmbeddingModelName": {
            "type": "string",
            "defaultValue": "text-embedding-ada-002",
            "metadata": {
                "description": "Azure OpenAI GPT Model Name"
            }
        },
        "AzureOpenAIEmbeddingModelName_capatity": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Azure OpenAI GPT Model Name capacity"
            }
        },
        "AzureOpenAIEmbeddingModelVersion": {
            "type": "string",
            "defaultValue": "2",
            "metadata": {
                "description": "Azure OpenAI GPT Model Version"
            }
        },
        "AzureTranslatorAccountName": {
            // "defaultValue": "glamdoctranslator",
            "defaultValue": "[format('{0}aztranslator', parameters('ResourcePrefix'))]",
            "type": "String",
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
        "AzureTranslator_skufamily": {
            "defaultValue": "S1",
            "type": "string",
            "allowedValues": [
                "F0",
                "S1",
                "S2",
                "S3",
                "S4"
            ],
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
        "ContentmoderatorAcountName": {
            // "defaultValue": "contentmoderatorglam",
            "defaultValue": "[format('{0}ContentModerator', parameters('ResourcePrefix'))]",
            "type": "String",
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
        "TextAnalyticsAccountName": {
            // "defaultValue": "textanalyticsvach",
            "defaultValue": "[format('{0}aztextanalytics', parameters('ResourcePrefix'))]",
            "type": "String",
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
        "SearchServicesAccountName": {
            // "defaultValue": "glamsearchservice",
            "defaultValue": "[format('{0}azsearchservice', parameters('ResourcePrefix'))]",
            "type": "String",
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
        "AzureCognitiveSearchSku": {
            "type": "string",
            "defaultValue": "standard",
            "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
            ],
            "metadata": {
                "description": "The SKU of the search service you want to create. E.g. free or standard"
            }
        },
        "replicaCount": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 12,
            "minValue": 1,
            "metadata": {
                "description": "Replicas distribute search workloads across the service. You need at least two replicas to support high availability of query workloads (not applicable to the free tier)."
            }
        },
        "partitionCount": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1,
                2,
                3,
                4,
                6,
                12
            ],
            "metadata": {
                "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple search units."
            }
        },
        "serverName": {
            "type": "string",
            "metadata": {
                "description": "Server Name for Azure database for PostgreSQL"
            }
        },
        "administratorLogin": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Database administrator login name"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "minLength": 8,
            "metadata": {
                "description": "Database administrator password"
            }
        },
        "availabilityZone": {
            "type": "string",
            "defaultValue": "1"
        },
        "skuSizeGB": {
            "type": "int",
            "defaultValue": 128
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Azure database for PostgreSQL compute capacity in vCores (2,4,8,16,32)"
            }
        },
        "postgresFlexibleServersSkuTier": {
            "type": "string",
            "defaultValue": "Burstable",
            "allowedValues": [
                "Burstable",
                "GeneralPurpose",
                "MemoryOptimized"
            ],
            "metadata": {
                "description": "The tier of the particular SKU, e.g. Burstable"
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Standard_B1ms",
            "metadata": {
                "description": "The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3"
            }
        },
        "skuSizeMB": {
            "type": "int",
            "defaultValue": 51200,
            "metadata": {
                "description": "Azure database for PostgreSQL Sku Size "
            }
        },
        "skuTier": {
            "type": "string",
            "defaultValue": "Burstable",
            "metadata": {
                "description": "Azure database for PostgreSQL pricing tier"
            }
        },
        "skuFamily": {
            "type": "string",
            "defaultValue": "Gen5",
            "metadata": {
                "description": "Azure database for PostgreSQL sku family"
            }
        },
        "postgresqlVersion": {
            "type": "string",
            "defaultValue": "15",
            "allowedValues": [
                "16",
                "15",
                "14",
                "13",
                "12",
                "11"
            ],
            "metadata": {
                "description": "PostgreSQL version"
            }
        },
        "locationReplica": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for replica database."
            }
        },
        "backupRetentionDays": {
            "type": "int",
            "defaultValue": 7,
            "metadata": {
                "description": "PostgreSQL Server backup retention days"
            }
        },
        "geoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Geo-Redundant Backup setting"
            }
        },
        "WebsiteName": {
            "type": "string",
            "defaultValue": "[format('{0}-website', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "Name of Web App"
            }
        },
        "backendServerName": {
            "type": "string",
            "defaultValue": "[format('{0}-server', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "Name of backend Web App"
            }
        },
        "HostingPlanName": {
            "type": "string",
            "defaultValue": "[format('{0}-hosting-plan', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "Name of App Service plan"
            }
        },
        "HostingPlanSku": {
            "type": "string",
            "defaultValue": "B3",
            "allowedValues": [
                "B1",
                "B2",
                "B3",
                "D1",
                "I1",
                "I1v2",
                "I2v2",
                "I3v2",
                "P1V2",
                "P1V3",
                "P2V2",
                "P2V3",
                "P3V2",
                "P3V3",
                "S1",
                "S2",
                "S3"
            ],
            "metadata": {
                "description": "Sku and size of App Service Plan (F1 does not support virtual network integration)"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network."
            }
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Address space for the virtual network."
            }
        },
        "vmSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "Address space for the VM subnet."
            }
        },
        "aksSubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0/24",
            "metadata": {
                "description": "Address space for the AKS subnet."
            }
        },
        "dbAddressPrefix": {
            "type": "string",
            "defaultValue": "10.0.3.0/24",
            "metadata": {
                "description": "Address space for the db subnet."
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual machine."
            }
        },
        "aksClusterName": {
            "type": "string",
            "metadata": {
                "description": "Name of the AKS cluster."
            }
        },
        "aksClusterSkuTier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Standard'",
                "Free"
            ],
            "metadata": {
                "description": "Specifies the tier of a managed cluster SKU: Paid or Free"
            }
        },
        "aksKubernetesVersion": {
            "type": "string",
            "defaultValue": "1.26.10",
            "metadata": {
                "description": "Kubernetes version for the AKS cluster."
            }
        },
        "aksAgentPoolCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "Number of agent nodes in the AKS cluster."
            }
        },
        "aksAgentVMSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "VM size for AKS agent nodes."
            }
        },
        "aksDnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "DNS prefix for the AKS cluster."
            }
        },
        "virtualMachines_glamvm_name": {
            "type": "string",
            "metadata": {
                "description": "Name your Virtual machine."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Name your Virtual machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Name your Virtual machine."
            }
        },
        "aksClusterEnablePrivateCluster": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Specifies whether to create the cluster as a private cluster or not."
            }
        },
        // "disks_glamvm_disk1": {
        //     // "defaultValue": "/subscriptions/f4e709ca-ccb8-4e46-b0b0-822db3762d86/resourceGroups/GLAMDEV-RG/providers/Microsoft.Compute/disks/glamvm_disk1_0d11046b172540ef8cbafa8f85f6578c",
        //     "type": "String",
        //     "metadata": {
        //         "description": "virtual disk name"
        //     }
        // },
        "templateIdentityName": {
            "type": "string",
            "defaultValue": "[substring(format('ImageGallery_{0}', guid(resourceGroup().id)), 0, 21)]",
            "metadata": {
                "description": "Name of the user-assigned managed identity used by Azure Image Builder template, and for triggering the Azure Image Builder build at the end of the deployment"
            }
        },
        "templateIdentityRoleDefinitionName": {
            "type": "string",
            "defaultValue": "[guid(resourceGroup().id)]",
            "metadata": {
                "description": "Permissions to allow for the user-assigned managed identity."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v5",
            "metadata": {
                "description": "Size of the virtual machine."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id, parameters('vmName'))))]",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIpName": {
            "type": "string",
            "defaultValue": "myPublicIP",
            "metadata": {
                "description": "Name for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIPAllocationMethod": {
            "type": "string",
            "defaultValue": "Dynamic",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "metadata": {
                "description": "Allocation method for the Public IP used to access the Virtual Machine."
            }
        },
        "publicIpSku": {
            "type": "string",
            "defaultValue": "Basic",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "metadata": {
                "description": "Set the public ip sku."
            }

        },
        "appName": {
            "type": "string",
            "defaultValue": "my app",
            "metadata": {
                "description": "aad  name."
            }
        },
        "identity": {
            "type": "string",
            "defaultValue": "identities",
            "metadata": {
                "description": "user assigned identities."
            }
        },
        "utcValue": {
            "type": "string",
            "defaultValue": "identities"

        }
        // "searchServices_textanalyticsvach_as36vn4dlyuy47k_externalid": {
        //     "defaultValue": "/subscriptions/f4e709ca-ccb8-4e46-b0b0-822db3762d86/resourceGroups/vach_onelogica/providers/Microsoft.Search/searchServices/textanalyticsvach-as36vn4dlyuy47k",
        //     "type": "String"
        // }
        // "AzureOpenAITemperature": {
        //     "type": "string",
        //     "defaultValue": "0",
        //     "metadata": {
        //         "description": "Azure OpenAI Temperature"
        //     }
        // },
        // "AzureOpenAITopP": {
        //     "type": "string",
        //     "defaultValue": "1",
        //     "metadata": {
        //         "description": "Azure OpenAI Top P"
        //     }
        // },
        // "AzureOpenAIMaxTokens": {
        //     "type": "string",
        //     "defaultValue": "1000",
        //     "metadata": {
        //         "description": "Azure OpenAI Max Tokens"
        //     }
        // },
        // "AzureOpenAIStopSequence": {
        //     "type": "string",
        //     "defaultValue": "\n",
        //     "metadata": {
        //         "description": "Azure OpenAI Stop Sequence"
        //     }
        // },
        // "AzureOpenAISystemMessage": {
        //     "type": "string",
        //     "defaultValue": "You are an AI assistant that helps people find information.",
        //     "metadata": {
        //         "description": "Azure OpenAI System Message"
        //     }
        // },
        // "AzureOpenAIApiVersion": {
        //     "type": "string",
        //     "defaultValue": "2023-07-01-preview",
        //     "metadata": {
        //         "description": "Azure OpenAI Api Version"
        //     }
        // },
        // "AzureOpenAIStream": {
        //     "type": "string",
        //     "defaultValue": "true",
        //     "metadata": {
        //         "description": "Whether or not to stream responses from Azure OpenAI"
        //     }
        // }
    },
    "variables": {
        "BlobContainerName": "glamdocuments",
        "OpenAiName": "glam_openai",
        "WebAppImageName": "DOCKER|glamacr.azurecr.io/glamlatestdeployforweb:1.3",
        "WebAppServerImageName": "DOCKER|glamacr.azurecr.io/severlatsettest:0.1",
        "networkSecurityGroupName": "default-NSG",
        "cliResourceName": "AzCLIAppRegDeploymentScript",
        "appServicePlanName": "[concat('Plan-', parameters('appName'))]",
        "aadAppUri": "[concat('https://', parameters('appName'), 'azurewebsites.net')]",
        "aadAppRedirectUri": "[concat('https://', parameters('appName'), 'azurewebsites.net/signin-oidc')]",
        "cliArg": "[concat(parameters('appName'), ' ', variables('aadAppUri'), ' ', variables('aadAppRedirectUri'))]",
        "nicName": "myVMNic",
        "subnetName": "Subnet",
        "templateIdentityRoleAssignmentName": "[guid(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('templateIdentityName')), resourceGroup().id, resourceId('Microsoft.Authorization/roleDefinitions', parameters('templateIdentityRoleDefinitionName')))]"

    },
    "resources": [
        // Blob storage
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[parameters('StorageAccountName')]",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },


        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/{1}', parameters('StorageAccountName'), 'default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default/{1}', parameters('StorageAccountName'), variables('BlobContainerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts',  parameters('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "none"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/default/config', parameters('StorageAccountName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/{1}/{2}', parameters('StorageAccountName'), 'default', 'doc-processing')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', parameters('StorageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ],
            "properties": {
                "metadata": {}
            }
        },
        // # open ai cognitive service
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('OpenaiAccountName')]",
            "location": "[parameters('Location')]",
            "kind": "OpenAI",
            "sku": {
                "name": "S0"
            },
            "properties": {
                "customSubDomainName": "[parameters('OpenaiAccountName')]"
            }
        },
        // #gpt-32k
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}', parameters('OpenaiAccountName'), parameters('AzureOpenAIGPTModelName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('OpenaiAccountName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": "[parameters('AzureOpenAIGPTModelName_capatity')]"
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPTModel')]",
                    "version": "[parameters('AzureOpenAIGPTModelVersion')]"
                }
            }
        },
        // #gpt-16k
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}',parameters('OpenaiAccountName'),parameters('AzureOpenAIGPTModelName16k'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('OpenaiAccountName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": "[parameters('AzureOpenAIGPTModelName16k_capatity')]"
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPTModel16k')]",
                    "version": "[parameters('AzureOpenAIGPTModelVersion16k')]"
                }
            }
        },
        // #gpt-4
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}',parameters('OpenaiAccountName'),parameters('AzureOpenAIGPT4ModelName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('OpenaiAccountName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": "[parameters('AzureOpenAIGPT4ModelName_capatity')]"
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPT4Model')]",
                    "version": "[parameters('AzureOpenAIGPT4ModelVersion')]"
                }
            }
        },
        // #Embedding using for search indexing
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}', parameters('OpenaiAccountName'), parameters('AzureOpenAIEmbeddingModelName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('OpenaiAccountName'))]",
                "[resourceId('Microsoft.CognitiveServices/accounts/deployments', parameters('OpenaiAccountName'), parameters('AzureOpenAIGPTModelName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": "[parameters('AzureOpenAIEmbeddingModelName_capatity')]"
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIEmbeddingModel')]",
                    "version": "[parameters('AzureOpenAIEmbeddingModelVersion')]"
                }
            }
        },
        // #Azure Translator
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('AzureTranslatorAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('AzureTranslator_skufamily')]"
                // "name": "S1"
            },
            "kind": "TextTranslation",
            "identity": {
                "type": "None"
            },
            "properties": {
                "customSubDomainName": "[parameters('AzureTranslatorAccountName')]",
                "publicNetworkAccess": "Enabled"
            }
        },
        // #Azure Moderator
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('ContentmoderatorAcountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S0"
            },
            "kind": "ContentModerator",
            "identity": {
                "type": "None"
            },
            "properties": {
                "customSubDomainName": "[parameters('ContentmoderatorAcountName')]",
                "publicNetworkAccess": "Enabled"
            }
        },
        // #TextAnalytics
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('TextAnalyticsAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S"
            },
            "kind": "TextAnalytics",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "publicNetworkAccess": "Enabled"
            }
        },
        // #Searcch Services using in QNA
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2023-11-01",
            "name": "[parameters('SearchServicesAccountName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "ProjectType": "aoai-your-data-service"
            },
            "sku": {
                "name": "[parameters('AzureCognitiveSearchSku')]"
            },
            "properties": {
                "replicaCount": "[parameters('replicaCount')]",
                "partitionCount": "[parameters('partitionCount')]"
            }

        },
        // #PostgresSql Flexible server
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2023-06-01-preview",
            "name": "[parameters('serverName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('postgresFlexibleServersSkuTier')]"
            },
            "dependsOn": [
                // "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZoneName'))]",
                // "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('privateDNSZoneName'), variables('privateDNSZoneLinkName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "replica": {
                    "role": "Primary"
                },
                "storage": {
                    "iops": 500,
                    "tier": "P10",
                    "storageSizeGB": "[parameters('skuSizeGB')]"
                },
                "network": {
                    "publicNetworkAccess": "Disabled",
                    "delegatedSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'postdbNet')]"
                    // "privateDnsZoneArmResourceId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDNSZoneName'))]"
                },

                "version": "[parameters('postgresqlVersion')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]", // Add this line
                "availabilityZone": "[parameters('availabilityZone')]",
                "backup": {
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                    "mode": "SameZone",
                    "standbyAvailabilityZone": "1"
                },
                "replicationRole": "Primary"
            }
        },
        // #Web App Services
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[parameters('HostingPlanName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('HostingPlanSku')]"
            },
            "properties": {
                "reserved": true
            },
            "kind": "linux"
        },
        //  {
        //     "type": "Microsoft.Web/sites/config",
        //     "apiVersion": "2018-11-01",
        //     "name": "[concat(parameters('appName'), '/appsettings')]",
        //     "location": "[resourceGroup().location]",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Web/sites', parameters('appName'))]",
        //         "[resourceId('Microsoft.Resources/deploymentScripts', variables('cliResourceName'))]"
        //     ],
        //     "properties": {
        //         "applicationId": "[reference(variables('cliResourceName')).outputs.appId]"
        //     }
        // },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-03-01",
            "name": "[parameters('WebsiteName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "serverFarmId": "[parameters('HostingPlanName')]",
                "properties": {
                    // "ClientID": "[reference(resourceId('Microsoft.AzureActiveDirectory/applications', 'YourWebApp'), '2021-07-01').applicationId]",
                    "SiteURL": "[concat('https://', parameters('WebsiteName'), '.azurewebsites.net')]"
                },
                "siteConfig": {
                    // "appSettings": [
                    //   {
                    //     "name": "APPINSIGHTS_CONNECTION_STRING",
                    //     "value": "[reference(resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName')), '2015-05-01').ConnectionString]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_SERVICE",
                    //     "value": "[format('https://{0}.search.windows.net', parameters('AzureCognitiveSearch'))]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_INDEX",
                    //     "value": "[parameters('AzureSearchIndex')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_CONVERSATIONS_LOG_INDEX",
                    //     "value": "[parameters('AzureSearchConversationLogIndex')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_KEY",
                    //     "value": "[listAdminKeys(format('Microsoft.Search/searchServices/{0}', parameters('AzureCognitiveSearch')), '2021-04-01-preview').primaryKey]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_SEMANTIC_SEARCH_CONFIG",
                    //     "value": "[parameters('AzureSearchSemanticSearchConfig')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_INDEX_IS_PRECHUNKED",
                    //     "value": "[parameters('AzureSearchIndexIsPrechunked')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_TOP_K",
                    //     "value": "[parameters('AzureSearchTopK')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_ENABLE_IN_DOMAIN",
                    //     "value": "[parameters('AzureSearchEnableInDomain')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_CONTENT_COLUMNS",
                    //     "value": "[parameters('AzureSearchContentColumns')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_FILENAME_COLUMN",
                    //     "value": "[parameters('AzureSearchFilenameColumn')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_TITLE_COLUMN",
                    //     "value": "[parameters('AzureSearchTitleColumn')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SEARCH_URL_COLUMN",
                    //     "value": "[parameters('AzureSearchUrlColumn')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_RESOURCE",
                    //     "value": "[parameters('AzureOpenAIResource')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_KEY",
                    //     "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource')), '2023-05-01').key1]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_MODEL",
                    //     "value": "[parameters('AzureOpenAIGPTModel')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_MODEL_NAME",
                    //     "value": "[parameters('AzureOpenAIGPTModelName')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_TEMPERATURE",
                    //     "value": "[parameters('AzureOpenAITemperature')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_TOP_P",
                    //     "value": "[parameters('AzureOpenAITopP')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_MAX_TOKENS",
                    //     "value": "[parameters('AzureOpenAIMaxTokens')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_STOP_SEQUENCE",
                    //     "value": "[parameters('AzureOpenAIStopSequence')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_SYSTEM_MESSAGE",
                    //     "value": "[parameters('AzureOpenAISystemMessage')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_API_VERSION",
                    //     "value": "[parameters('AzureOpenAIApiVersion')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_STREAM",
                    //     "value": "[parameters('AzureOpenAIStream')]"
                    //   },
                    //   {
                    //     "name": "AZURE_OPENAI_EMBEDDING_MODEL",
                    //     "value": "[parameters('AzureOpenAIEmbeddingModel')]"
                    //   },
                    //   {
                    //     "name": "AZURE_FORM_RECOGNIZER_ENDPOINT",
                    //     "value": "[format('https://{0}.api.cognitive.microsoft.com/', parameters('Location'))]"
                    //   },
                    //   {
                    //     "name": "AZURE_FORM_RECOGNIZER_KEY",
                    //     "value": "[listKeys(format('Microsoft.CognitiveServices/accounts/{0}', parameters('FormRecognizerName')), '2023-05-01').key1]"
                    //   },
                    //   {
                    //     "name": "AZURE_BLOB_ACCOUNT_NAME",
                    //     "value": "[parameters('StorageAccountName')]"
                    //   },
                    //   {
                    //     "name": "AZURE_BLOB_ACCOUNT_KEY",
                    //     "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2019-06-01').keys[0].value]"
                    //   },
                    //   {
                    //     "name": "AZURE_BLOB_CONTAINER_NAME",
                    //     "value": "[variables('BlobContainerName')]"
                    //   },
                    //   {
                    //     "name": "ORCHESTRATION_STRATEGY",
                    //     "value": "[parameters('OrchestrationStrategy')]"
                    //   },
                    //   {
                    //     "name": "AZURE_CONTENT_SAFETY_ENDPOINT",
                    //     "value": "[format('https://{0}.api.cognitive.microsoft.com/', parameters('Location'))]"
                    //   },
                    //   {
                    //     "name": "AZURE_CONTENT_SAFETY_KEY",
                    //     "value": "[listKeys(format('Microsoft.CognitiveServices/accounts/{0}', parameters('ContentSafetyName')), '2023-05-01').key1]"
                    //   },
                    //   {
                    //     "name": "AZURE_SPEECH_SERVICE_NAME",
                    //     "value": "[parameters('SpeechServiceName')]"
                    //   },
                    //   {
                    //     "name": "AZURE_SPEECH_SERVICE_KEY",
                    //     "value": "[listKeys(format('Microsoft.CognitiveServices/accounts/{0}', parameters('SpeechServiceName')), '2023-05-01').key1]"
                    //   },
                    //   {
                    //     "name": "AZURE_SPEECH_SERVICE_REGION",
                    //     "value": "[parameters('Location')]"
                    //   }
                    // ],
                    "linuxFxVersion": "[variables('WebAppImageName')]"
                }
            },
            "dependsOn": [
                //   "[resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('HostingPlanName'))]"
                // "[resourceId('Microsoft.Resources/deploymentScripts', variables('cliResourceName'))]"
                //   "[resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource'))]",
                //   "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[parameters('backendServerName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "serverFarmId": "[parameters('HostingPlanName')]",
                "siteConfig": {

                    "linuxFxVersion": "[variables('WebAppServerImageName')]"
                }
            },
            "dependsOn": [
                //   "[resourceId('Microsoft.Insights/components', parameters('ApplicationInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', parameters('HostingPlanName'))]"
                //   "[resourceId('Microsoft.CognitiveServices/accounts', parameters('AzureOpenAIResource'))]",
                //   "[resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName'))]"
            ]
        },
        // {
        //     "type": "Microsoft.AzureActiveDirectory/domains",
        //     "apiVersion": "2021-07-01",
        //     "name": "[concat(parameters('WebsiteName'),'.azurewebsites.net')]",
        //     "location": "[parameters('Location')]",
        //     "properties": {
        //         "adminConsentDescription": "Admin consent for yourcustomdomain.com",
        //         "adminConsentDisplayName": "Admin consent for yourcustomdomain.com",
        //         "isDefault": false
        //     }
        // },
        // {
        //     "type": "Microsoft.AzureActiveDirectory/applications",
        //     "apiVersion": "2021-07-01",
        //     "name": "YourWebApp",
        //     "properties": {networkInterface
        //         "displayName": "Your Web App",
        //         "signInAudience": "AzureADMyOrg",
        //         "publicClient": false
        //     }
        // },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-05-01",
            "name": "[parameters('publicIpName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('publicIpSku')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                }
            }
        },
       
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2022-05-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "3389",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        // #Virtual Network
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "vmSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('vmSubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "aksSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('aksSubnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    },
                    {
                        "name": "postdbNet",
                        "properties": {
                            "addressPrefix": "[parameters('dbAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            }
        },
         {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-05-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), 'vmSubnet')]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ]
        },
        // Define Virtual Machine
        {
            "apiVersion": "2023-03-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "microsoftwindowsdesktop",
                        "offer": "windows-11",
                        "sku": "win11-22h2-pro",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "createOption": "FromImage",
                         "caching": "ReadWrite",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    },
                    "dataDisks": [],
                    "diskControllerType": "SCSI"
                },

                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('vmName')]",
                    "adminPassword": "[parameters('adminPassword')]"

                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]",
                            "properties": {
                                "deleteOption": "Detach"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                },
                "licenseType": "Windows_Client"


            }
        },
        // Define AKS Cluster
        {
            "apiVersion": "2023-08-02-preview",
            "type": "Microsoft.ContainerService/managedClusters",
            "name": "[parameters('aksClusterName')]",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "sku": {
                "name": "Base",
                "tier": "[parameters('aksClusterSkuTier')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "kubernetesVersion": "[parameters('aksKubernetesVersion')]",
                // "dnsPrefix": "[parameters('dnsPrefix')]",
                "networkProfile": {
                    "networkPlugin": "azure",
                    "networkPolicy": "calico",
                    "networkDataplane": "azure",
                    "loadBalancerSku": "Standard",
                    "serviceCidr": "10.0.0.0/16",
                    "dnsServiceIP": "10.0.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16",
                    "serviceCidrs": [
                        "10.0.0.0/16"
                    ]
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "count": "[parameters('aksAgentPoolCount')]",
                        "vmSize": "[parameters('aksAgentVMSize')]",
                        "osDiskSizeGB": 128,
                        "mode": "System",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks",
                        "type": "VirtualMachineScaleSets"
                        
                    }
                ],
                "servicePrincipalProfile": {
                    "clientId": "msi"
                },
                "windowsProfile": {
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "enableCSIProxy": true

                },
                "dnsPrefix": "[concat(parameters('aksDnsPrefix'),'-dns')]",
                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('aksClusterEnablePrivateCluster')]"
                }
                // "enablePrivateCluster": true,
                // "privateCluster": {
                //   "enableNetworkPolicy": true
                // }
            }

        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2023-01-31",
            "name": "[parameters('templateIdentityName')]",
            "location": "[parameters('location')]"
        },
        // {
        //     "type": "Microsoft.Authorization/roleDefinitions",
        //     "apiVersion": "2022-04-01",
        //     "name": "[parameters('templateIdentityRoleDefinitionName')]",
        //     "properties": {
        //         "roleName": "[parameters('templateIdentityRoleDefinitionName')]",
        //         "description": "Used for AIB template and ARM deployment script that runs AIB build",
        //         "type": "customRole",
        //         "permissions": [
        //             {
        //                 "actions": [
        //                     "Microsoft.Compute/galleries/read",
        //                     "Microsoft.Compute/galleries/images/read",
        //                     "Microsoft.Compute/galleries/images/versions/read",
        //                     "Microsoft.Compute/galleries/images/versions/write",
        //                     "Microsoft.Compute/images/read",
        //                     "Microsoft.Compute/images/write",
        //                     "Microsoft.Compute/images/delete",
        //                     "Microsoft.Storage/storageAccounts/blobServices/containers/read",
        //                     "Microsoft.Storage/storageAccounts/blobServices/containers/write",
        //                     "Microsoft.ContainerInstance/containerGroups/read",
        //                     "Microsoft.ContainerInstance/containerGroups/write",
        //                     "Microsoft.ContainerInstance/containerGroups/start/action",
        //                     "Microsoft.Resources/deployments/read",
        //                     "Microsoft.Resources/deploymentScripts/read",
        //                     "Microsoft.Resources/deploymentScripts/write",
        //                     "Microsoft.VirtualMachineImages/imageTemplates/run/action"
        //                 ]
        //             }
        //         ],
        //         "assignableScopes": [
        //             "[resourceGroup().id]"
        //         ]
        //     }
        // },
        // {
        //     "type": "Microsoft.Authorization/roleAssignments",
        //     "apiVersion": "2022-04-01",
        //     "name": "[variables('templateIdentityRoleAssignmentName')]",
        //     "properties": {
        //         "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('templateIdentityRoleDefinitionName'))]",
        //         "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('templateIdentityName')), '2023-01-31').principalId]",
        //         "principalType": "ServicePrincipal"
        //     },
        //     "dependsOn": [
        //         "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('templateIdentityName'))]",
        //         "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('templateIdentityRoleDefinitionName'))]"
        //     ]
        // },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2019-10-01-preview",
            "name": "[variables('cliResourceName')]",
            "location": "[resourceGroup().location]",
            "kind": "AzureCLI",
            "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identity'))]": {}
                }
            },
            "properties": {
                "forceUpdateTag": "[parameters('utcValue')]",
                "AzCliVersion": "2.0.80",
                "timeout": "PT30M",
                "arguments": "[variables('cliArg')]",
                "scriptContent": " appInfo=$(az ad app create --display-name $1 --identifier-uris \"$2\" --reply-urls \"$3\")echo $appInfo > $AZ_SCRIPTS_OUTPUT_PATH",
                "cleanupPreference": "OnSuccess",
                "retentionInterval": "P1D"
            }
        }


    ]
}