{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ResourcePrefix": {
            "type": "string",
            "metadata": {
                "description": "provide a 2-13 character prefix for all resources."
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location for the Web App"
            }
        },
        // frontend webapp parameter
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "[format('{0}svcplan', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "Name of the App Service Plan"
            }
        },
        "webAppName": {
            "type": "string",
            "defaultValue": "Doot",
            "metadata": {
                "description": "Name of the Web App"
            }
        },
        "repositoryUrl": {
            "type": "string",
            "defaultValue": "https://github.com/anshu1058/dootbotcode",
            "metadata": {
                "description": "The GitHub repository URL"
            }
        },
        "githubToken": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "GitHub Personal Access Token"
            }
        },
        "branch": {
            "defaultValue": "master",
            "type": "string",
            "metadata": {
                "description": "The branch in the repository to deploy from"
            }
        },
        "appSettings": {
            "defaultValue": {},
            "type": "object",
            "metadata": {
                "description": "Application settings for the Web App"
            }
        },
        // backend webapp parameter
        "serverwebAppName": {
            "type": "string",
            "defaultValue": "dootserver",
            "metadata": {
                "description": "Name of the frontend server Web App"
            }
        },
        "serverrepositoryUrl": {
            "type": "string",
            "defaultValue": "https://github.com/anshu1058/dootbotserver",
            "metadata": {
                "description": "The GitHub repository URL of frontend server"
            }
        },
        "serverbranch": {
            "defaultValue": "master",
            "type": "string",
            "metadata": {
                "description": "The branch in the repository to deploy from"
            }
        },
        "serverappSettings": {
            "defaultValue": {},
            "type": "object",
            "metadata": {
                "description": "Application settings for the Web App"
            }
        },
        // storage account parameters
        "storageAccountName": {
            "defaultValue": "[format('{0}storage', parameters('ResourcePrefix'))]",
            "type": "string",
            "metadata": {
                "description": "Name of the storage account."
            }
        },
        // open ai parameter
        "openAiName": {
            "type": "string",
            "defaultValue": "[format('{0}openai', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "The name of the OpenAI service"
            }
        },
        "region": {
            "defaultValue": "global",
            "type": "string",
            "metadata": {
                "description": "The region in which to create the bot service."
            }
        },
        "openAiLocation": {
            "type": "string",
            "defaultValue": "eastus",
            "allowedValues": [
                "southindia",
                "eastus",
                "sweedencentral",
                "southcentralus",
                "westeurope",
                "francecentral"
            ],
            "metadata": {
                "description": "Location for OpenAI resources. Limited to specific regions."
            }
        },
        "gpt4Capacity": {
            "defaultValue": 10,
            "type": "int",
            "metadata": {
                "description": "The capacity for GPT-4 models in TPM (Tokens Per Minute)"
            }
        },
        "AzureOpenAIGPT4ModelVersion": {
            "type": "string",
            "defaultValue": "2024-08-06",
            "metadata": {
                "description": "Azure OpenAI GPT 4 Model Version"
            }
        },
        "AzureOpenAIGPT4ModelName": {
            "type": "string",
            "defaultValue": "gpt-4o",
            "metadata": {
                "description": "Azure OpenAI  GPT 4 Model Name"
            }
        },
        "AzureOpenAIGPT4ominiModelName": {
            "defaultValue": "gpt-4o-mini",
            "type": "string",
            "metadata": {
                "description": "Azure OpenAI GPT 4 Mini Model Name"
            }
        },
        "AzureOpenAIGPT4ominiModelVersion": {
            "defaultValue": "2024-07-18",
            "type": "string",
            "metadata": {
                "description": "Azure OpenAI GPT 4 Mini Model Version"
            }
        },
        "embeddingCapacity": {
            "defaultValue": 10,
            "type": "Int",
            "metadata": {
                "description": "The capacity for embedding model in TPM"
            }
        },
        "AzureOpenAIGPTModel": {
            "type": "string",
            "defaultValue": "gpt-35-turbo",
            "metadata": {
                "description": "Azure OpenAI GPT Model Deployment Name"
            }
        },
        "AzureOpenAIGPTModelName": {
            "type": "string",
            "defaultValue": "gpt-35-turbo",
            "metadata": {
                "description": "Azure OpenAI GPT Model Name"
            }
        },
        "AzureOpenAIGPTModelName_capatity": {
            "type": "int",
            "defaultValue": 10,
            "metadata": {
                "description": "Azure OpenAI GPT Model Name"
            }
        },
        "AzureOpenAIGPTModelVersion": {
            "type": "string",
            "defaultValue": "0613",
            "metadata": {
                "description": "Azure OpenAI GPT Model Version"
            }
        },
        "translatorAccountName": {
            "defaultValue": "[format('{0}translate', parameters('ResourcePrefix'))]",
            "type": "string",
            "metadata": {
                "description": "The name of the Azure Translator"
            }
        },
        // azure translator
        "AzureTranslator_skufamily": {
            "defaultValue": "S1",
            "type": "string",
            "allowedValues": [
                "F0",
                "S1",
                "S2",
                "S3",
                "S4"
            ],
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
        // search service
        "searchServiceName": {
            "type": "string",
            "defaultValue": "[format('{0}azsearchservice', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "The name of the Azure Cognitive Search service"
            }
        },
        "AzureCognitiveSearchSku": {
            "type": "string",
            "defaultValue": "standard",
            "allowedValues": [
                "free",
                "basic",
                "standard",
                "standard2",
                "standard3",
                "storage_optimized_l1",
                "storage_optimized_l2"
            ],
            "metadata": {
                "description": "The SKU of the search service you want to create. E.g. free or standard"
            }
        },
        "replicaCount": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 12,
            "minValue": 1,
            "metadata": {
                "description": "Replicas distribute search workloads across the service. You need at least two replicas to support high availability of query workloads (not applicable to the free tier)."
            }
        },
        "partitionCount": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1,
                2,
                3,
                4,
                6,
                12
            ],
            "metadata": {
                "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple search units."
            }
        },
        "languageAnalyticsAccountName": {
            "defaultValue": "[format('{0}aztextanalytics', parameters('ResourcePrefix'))]",
            "type": "string",
            "metadata": {
                "description": "Name of Azure Translator Account"
            }
        },
        "postgresServerName": {
            "type": "string",
            "defaultValue": "[format('{0}-postgresservername', parameters('ResourcePrefix'))]",
            "metadata": {
                "description": "The name of the PostgreSQL Flexible Server"
            }
        },
        "administratorLogin": {
            "type": "string",
            "metadata": {
                "description": "PostgreSQL administrator login name"
            }
        },
        "administratorLoginPassword": {
            "type": "securestring",
            "metadata": {
                "description": "PostgreSQL administrator password"
            }
        },
        "postgresFlexibleServersSkuTier": {
            "type": "string",
            "defaultValue": "Burstable",
            "allowedValues": [
                "Burstable",
                "GeneralPurpose",
                "MemoryOptimized"
            ],
            "metadata": {
                "description": "The tier of the particular SKU, e.g. Burstable"
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "Standard_B1ms",
            "metadata": {
                "description": "The name of the sku, typically, tier + family + cores, e.g. Standard_D4s_v3"
            }
        },
        "skuSizeMB": {
            "type": "int",
            "defaultValue": 51200,
            "metadata": {
                "description": "Azure database for PostgreSQL Sku Size "
            }
        },
        "skuTier": {
            "type": "string",
            "defaultValue": "Burstable",
            "metadata": {
                "description": "Azure database for PostgreSQL pricing tier"
            }
        },
        "skuFamily": {
            "type": "string",
            "defaultValue": "Gen5",
            "metadata": {
                "description": "Azure database for PostgreSQL sku family"
            }
        },
        "postgresqlVersion": {
            "type": "string",
            "defaultValue": "15",
            "allowedValues": [
                "16",
                "15",
                "14",
                "13",
                "12",
                "11"
            ],
            "metadata": {
                "description": "PostgreSQL version"
            }
        },
        "locationReplica": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for replica database."
            }
        },
        "skuSizeGB": {
            "type": "int",
            "defaultValue": 128
        },
        "backupRetentionDays": {
            "type": "int",
            "defaultValue": 7,
            "metadata": {
                "description": "PostgreSQL Server backup retention days"
            }
        },
        "availabilityZone": {
            "type": "string",
            "defaultValue": "1"
        },
        "geoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Geo-Redundant Backup setting"
            }
        },
        "SERVICE_NAME": {
            "defaultValue": "[format('{0}servicename', parameters('ResourcePrefix'))]",
            "type": "string",
            "metadata": {
                "description": "The service name for the app."
            }
        },
        "INDEX_NAME": {
            "defaultValue": "[format('{0}dootindex', parameters('ResourcePrefix'))]",
            "type": "string",
            "metadata": {
                "description": "The index name for the app."
            }
        },
        "INDEXER_NAME": {
            "defaultValue": "[format('{0}dootindexer', parameters('ResourcePrefix'))]",
            "type": "string",
            "metadata": {
                "description": "The indexer name for the app."
            }
        },
        "SKILLSET_NAME": {
            "defaultValue": "[format('{0}skillset', parameters('ResourcePrefix'))]",
            "type": "string",
            "metadata": {
                "description": "The skillset name for the app."
            }
        },
        "vaults_glamdevrgkeyvault_name": {
            "defaultValue": "[format('{0}keyvault', parameters('ResourcePrefix'))]",
            "type": "string",
            "metadata": {
                "description": "key vault name"
            }
        },
        "objectId": {
            "type": "int",
            "metadata": {
                "description": "enter you tenantId"
            }
        },
        "clientID":{
            "type": "securestring",
            "metadata": {
                "description": "enter the secret of the clent id"
            }
        },
        "secret": {
            "type": "securestring",
            "metadata": {
                "description": "enter the secret of the registered"
            }
        }
    },
    "resources": [
        // ServerFarms
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2023-12-01",
            "name": "[parameters('appServicePlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "P1v3",
                "tier": "PremiumV3",
                "size": "P1v3",
                "family": "Pv3",
                "capacity": 1
            },
            "properties": {
                "reserved": true // Set to true for Linux plans
            }
        },
        // Frontend Web App
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('webAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "httpsOnly": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "WEBSITES_PORT",
                            "value": "3000"
                        },
                        {
                            "name": "PORT",
                            "value": "3000"
                        }
                    ],
                    "linuxFxVersion": "NODE|20-lts",
                    "appCommandLine": "npx serve -s dist -l 3000",
                    "managedPipelineMode": "Integrated"
                }
            }
        },
        // Frontend GitHub Deployment
        {
            "type": "Microsoft.Web/sites/sourcecontrols",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('webAppName'), '/web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
            ],
            "properties": {
                "repoUrl": "[parameters('repositoryUrl')]",
                "branch": "[parameters('branch')]",
                "isManualIntegration": false,
                "deploymentRollbackEnabled": true,
                "isMercurial": false,
                "isGitHubAction": true,
                "githubActionConfiguration": {
                    "githubPersonalAccessToken": "[parameters('githubToken')]"
                }
            }
        },
        // ServerWeb App
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('serverwebAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "httpsOnly": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "WEBSITES_PORT",
                            "value": "3001"
                        },
                        {
                            "name": "PORT",
                            "value": "3001"
                        },
                        {
                            "name": "AZURE_POSTGRESQL_DATABASE",
                            "value": "[concat(parameters('postgresServerName), '.postgres.database.azure.com')]"
                        },
                        {
                            "name": "AZURE_POSTGRESQL_HOST",
                            "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').key1]"
                        },
                        {
                            "name": "AZURE_POSTGRESQL_PASSWORD",
                            "value": "[parameters('administratorLoginPassword')]"
                        },
                        {
                            "name": "AZURE_POSTGRESQL_USER",
                            "value": "[parameters('postgresServerName')]"
                        },
                        {
                            "name": "SEARCH_SVC_NAME",
                            "value": "[parameters('searchServiceName'))]"
                        },
                        {
                            "name": "CLIENT_SECRET",
                            "value": "[parameter('secret')]"
                        },
                        {
                            "name": "GLAM_CLIENT_ID",
                            "vlaue": "[parameter('clientID')]"
                        },
                        {
                            "name": "GLAM_TENANT_ID",
                            "value": "[subscription().tenantId]"
                        },
                        {
                            "name": "REACT_APP_COSMOS_CONNECTION_STRING",
                            "value": ""
                        },
                        {
                            "name": "CONNECTIONSTRING",
                            "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccountName')), '2019-06-01').keys[0].value]"
                        },
                        {
                            "name": "REACT_APP_API",
                            "vlaue": "[concat('https://', parameters('serverwebAppName'), '.azurewebsites.net')]"
                        },
                        {
                            "name": "REACT_APP_SERVICE_NAME",
                            "value": "[parameters('SERVICE_NAME')]"
                        },
                        {
                            "name": "REACT_APP_INDEX_NAME",
                            "value": "[parameters('INDEX_NAME')]"
                        },
                        {
                            "name": "REACT_APP_SOURCE_TYPE",
                            "value": "azureblob"
                        },
                        {
                            "name": "REACT_APP_DATA_SOURCE_NAME",
                            "value": "[parameters('StorageAccountName')]"
                        },
                        // {
                        //     "name": "REACT_APP_CONTAINER_NAME",
                        //     "value": "[parameters('BlobContainerName')]"
                        // },
                        {
                            "name": "REACT_APP_INDEXER_NAME",
                            "value": "[parameters('INDEXER_NAME')]"
                        },
                        {
                            "name": "REACT_APP_TARGET_INDEX_NAME",
                            "value": "[parameters('INDEX_NAME')]"
                        },
                        {
                            "name": "REACT_APP_SKILLSET_NAME",
                            "value": "[parameters('SKILLSET_NAME')]"
                        }
                    ],
                    "linuxFxVersion": "NODE|18-lts",
                    "appCommandLine": " node index.js",
                    "managedPipelineMode": "Integrated"
                }
            }
        },
        // ServerGitHub Deployment
        {
            "type": "Microsoft.Web/sites/sourcecontrols",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('serverwebAppName'), '/web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('serverwebAppName'))]"
            ],
            "properties": {
                "repoUrl": "[parameters('serverrepositoryUrl')]",
                "branch": "[parameters('serverbranch')]",
                "isManualIntegration": false,
                "deploymentRollbackEnabled": true,
                "isMercurial": false,
                "isGitHubAction": true,
                "githubActionConfiguration": {
                    "githubPersonalAccessToken": "[parameters('githubToken')]"
                }
            }
        },
        // Storage account
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        // Queue Service
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        // Container 1
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccountName'), '/default/finance')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "none"
            }
        },
        // Container2
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[concat(parameters('storageAccountName'), '/default/glamfilecontainer')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "none"
            }
        },
        // Container 3
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[concat(parameters('storageAccountName'), '/default/humanresource')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "publicAccess": "none"
            }
        },
        // open ai acc
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2023-10-01-preview",
            "name": "[parameters('openAiName')]",
            "location": "[parameters('openAiLocation')]",
            "sku": {
                "name": "S0"
            },
            "kind": "OpenAI",
            "properties": {
                "customSubDomainName": "[parameters('openAiName')]",
                "publicNetworkAccess": "Enabled"
            }
        },
        // open ai gpt 4omini
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}',parameters('openAiName'), 'gpt-4o-mini')]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]"
            ],
            "sku": {
                "name": "GlobalStandard",
                "capacity": "[parameters('gpt4Capacity')]"
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPT4ominiModelName')]",
                    "version": "[parameters('AzureOpenAIGPT4ominiModelVersion')]"
                }
            }
        },
        //    open ai gpt 4o
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[concat(parameters('openAiName'), '/gpt-40')]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]"
            ],
            "sku": {
                "name": "GlobalStandard",
                "capacity": "[parameters('gpt4Capacity')]"
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPT4ModelName')]",
                    "version": "[parameters('AzureOpenAIGPT4ModelVersion')]"
                }
            }
        },
        // #gpt-32k
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[format('{0}/{1}', parameters('openAiName'), parameters('AzureOpenAIGPTModelName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": "[parameters('AzureOpenAIGPTModelName_capatity')]"
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "[parameters('AzureOpenAIGPTModel')]",
                    "version": "[parameters('AzureOpenAIGPTModelVersion')]"
                }
            }
        },
        //    open ai text-embedding-ada-002
        {
            "type": "Microsoft.CognitiveServices/accounts/deployments",
            "apiVersion": "2023-10-01-preview",
            "name": "[concat(parameters('openAiName'), '/text-embedding-ada-002')]",
            "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName'))]"
            ],
            "sku": {
                "name": "Standard",
                "capacity": "[parameters('embeddingCapacity')]"
            },
            "properties": {
                "model": {
                    "format": "OpenAI",
                    "name": "text-embedding-ada-002",
                    "version": "2"
                }
            }
        },
        //   Translate
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2021-04-30",
            "name": "[parameters('translatorAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('AzureTranslator_skufamily')]"
                // "name": "S1"
            },
            "kind": "TextTranslation",
            "identity": {
                "type": "None"
            },
            "properties": {
                "customSubDomainName": "[parameters('translatorAccountName')]",
                "publicNetworkAccess": "Enabled"
            }
        },
        //   Search Service
        {
            "type": "Microsoft.Search/searchServices",
            "apiVersion": "2020-08-01",
            "name": "[parameters('searchServiceName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('AzureCognitiveSearchSku')]"
            },
            "properties": {
                "replicaCount": "[parameters('replicaCount')]",
                "partitionCount": "[parameters('partitionCount')]"
            }
        },
        //  TextAnalytics
        {
            "type": "Microsoft.CognitiveServices/accounts",
            "apiVersion": "2021-04-30",
            "name": "[parameters('languageAnalyticsAccountName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S"
            },
            "kind": "TextAnalytics",
            "properties": {
                "publicNetworkAccess": "Enabled"
            }
        },
        //   Postgress 
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2023-06-01-preview",
            "name": "[parameters('postgresServerName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "[parameters('skuName')]",
                "tier": "[parameters('postgresFlexibleServersSkuTier')]"
            },
            "properties": {
                "replica": {
                    "role": "Primary"
                },
                "storage": {
                    "iops": 500,
                    "tier": "P10",
                    "storageSizeGB": "[parameters('skuSizeGB')]"
                },
                "version": "[parameters('postgresqlVersion')]",
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
                "availabilityZone": "[parameters('availabilityZone')]",
                "backup": {
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled"
                },
                "network": {
                    "delegatedSubnetResourceId": "",
                    "privateDnsZoneArmResourceId": "",
                    "firewallRules": [
                        {
                            "name": "AllowAllAzureServices",
                            "startIpAddress": "0.0.0.0",
                            "endIpAddress": "0.0.0.0"
                        },
                        {
                            "name": "AllowAllIPs",
                            "startIpAddress": "0.0.0.0",
                            "endIpAddress": "255.255.255.255"
                        }
                    ]
                },
                "highAvailability": {
                    "mode": "Disabled"
                },
                "replicationRole": "Primary"
            }
        },
        // keyvault
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2024-04-01-preview",
            "name": "[parameters('vaults_glamdevrgkeyvault_name')]",
            "location": "centralindia",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "Premium"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('objectId')]",
                        "permissions": {
                            "keys": [
                                "Get",
                                "List",
                                "Update",
                                "Create",
                                "Import",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore",
                                "GetRotationPolicy",
                                "SetRotationPolicy",
                                "Rotate"
                            ],
                            "secrets": [
                                "Get",
                                "List",
                                "Set",
                                "Delete",
                                "Recover",
                                "Backup",
                                "Restore"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 90,
                "enableRbacAuthorization": false,
                "vaultUri": "[concat('https://', parameters('vaults_glamdevrgkeyvault_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/APP-CLIENT-ID')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true,
                    "nbf": 1727079672
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/AZURE-GPT-4OMINI-SVCNAME')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value":"[parameters('openAiName')]",
                "attributes": {
                    "enabled": true,
                    "nbf": 1727766773
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/AZURE-OPENAI-GPT35-GPT-4-APIKEY')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value":"[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').key1]",
                "attributes": {
                    "enabled": true,
                    "nbf": 1727659565
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/AZURE-OPENAI-GPT35-GPT-4-SVCNAME')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value":"[parameters('openAiName')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/AZURE-OPENAI-GPT-40-MINI-APIKEY')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value":"[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('openAiName')), '2023-05-01').key1]",
                "attributes": {
                    "enabled": true,
                    "nbf": 1727766738
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/AZURE-SEARCH-SVCNAME')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value":"[parameters('searchServiceName')]",
                "attributes": {
                    "enabled": true,
                    "nbf": 1727079072
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/finance')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/glamfilecontainer')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/humanresource')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/QNDA-SEARCH-SERVICE-API-KEY')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                 "value": "[listAdminKeys(format('Microsoft.Search/searchServices/{0}', parameters('searchServiceName')), '2021-04-01-preview').primaryKey]",
                "attributes": {
                    "enabled": true,
                    "nbf": 1727079353
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/REACT-APP-AZURE-TRANSLATOR-API')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', parameters('translatorAccountName')), '2022-12-01').key1]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/REACT-APP-AZURE-TRANSLATOR-ENDPOINT')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/REACT-APP-AZURE-TRANSLATOR-LOCATION')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value":"centralindia",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/REACT-APP-TRANSLATOR-SVCNAME')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value":"[parameters('translatorAccountName')]",
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/TEXT-INSIGHT-SUB-KEY')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "attributes": {
                    "enabled": true
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('vaults_glamdevrgkeyvault_name'), '/TEXT-INSIGHT-SVCNAME')]",
            "location": "centralindia",
            "dependsOn": [
                "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_glamdevrgkeyvault_name'))]"
            ],
            "properties": {
                "value": "[parameters('languageAnalyticsAccountName')]",
                "attributes": {
                    "enabled": true,
                    "nbf": 1727079518
                }
            }
        }
    ]
}