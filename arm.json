{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vnet-name": {
            "type": "string",
            "defaultValue": "aks-vnet",
            "metadata": {
                "description": "Virtual Network Name"
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.64.0.0/16",
            "metadata": {
                "description": "Virtual Network Address Prefix"
            }
        },
        "aks-subnet": {
            "type": "string",
            "defaultValue": "aks-subnet",
            "metadata": {
                "description": "AKS Subnet Name"
            }
        },
        "aks-subnetPrefix": {
            "type": "string",
            "defaultValue": "10.64.0.0/24",
            "metadata": {
                "description": "AKS Subnet Address Prefix"
            }
        },
        "postgresql_subnet": {
            "type": "string",
            "defaultValue": "postgresql_subnet",
            "metadata": {
                "description": "PostgreSQL Subnet Name"
            }
        },
        "postgresubnetPrefix": {
            "type": "string",
            "defaultValue": "10.64.255.0/24",
            "metadata": {
                "description": "Subnet Address Prefix"
            }
        },
        "natGatewayName": {
            "defaultValue": "myNATgateway",
            "type": "string",
            "metadata": {
                "description": "Name of the NAT gateway to be attached to the workspace subnets."
            }
        },
        "natGatewayPublicIpName": {
            "defaultValue": "myNATGatewayPublicIP",
            "type": "string",
            "metadata": {
                "description": "Name of the NAT gateway public IP."
            }
        },
        "ClusterName": {
            "defaultValue": "[concat('aks-', uniquestring(resourceGroup().id))]",
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the AKS cluster."
            }
        },
        "osDiskSizeGB": {
            "defaultValue": 128,
            "type": "int",
            "metadata": {
                "description": "Specifies the OS Disk Size in GB to be used to specify the disk size for every machine in this master/agent pool. If you specify 0, it will apply the default osDisk size according to the vmSize specified.."
            }
        },
        "AgentCountMin": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 3,
            "minValue": 1,
            "metadata": {
                "description": "The number of Minimum nodes for the cluster. 1 Node is enough for Dev/Test and minimum 3 nodes, is recommended for Production"
            }
        },
        "AgentCountMax": {
            "type": "int",
            "defaultValue": 5,
            "maxValue": 25,
            "minValue": 1,
            "metadata": {
                "description": "The number of Maximum nodes for the cluster"
            }
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_B2ms",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "aksClusterEnablePrivateCluster": {
            "defaultValue": true,
            "type": "bool",
            "metadata": {
                "description": "Specifies whether to create the cluster as a private cluster or not."
            }
        },

        "dnsPrefix": {
            "defaultValue": "[parameters('ClusterName')]",
            "type": "string",
            "metadata": {
                "description": "Specifies the DNS prefix specified when creating the managed cluster."
            }
        },
        "aksClusterSkuTier": {
            "type": "string",
            "defaultValue": "Paid",
            "allowedValues": [
                "Paid",
                "Free"
            ],
            "metadata": {
                "description": "Specifies the tier of a managed cluster SKU: Paid or Free"
            }
        },
        "acrName": {
            "type": "string",
            "defaultValue": "[concat('acr', uniquestring(resourceGroup().id))]",
            "metadata": {
                "description": "Name of the azure container registry (must be globally unique)"
            },
            "maxLength": 50,
            "minLength": 5
        },
        "acrAdminUserEnabled": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Enable an admin user that has push/pull permission to the registry."
            }
        },
        "acrSku": {
            "type": "string",
            "defaultValue": "Basic",
            "metadata": {
                "description": "Tier of your Azure Container Registry."
            },
            "allowedValues": [
                "Basic",
                "Standard",
                "Premium"
            ]
        },
        "PostgreServerName": {
            "type": "string",
            "defaultValue": "[concat('postgresql-', uniquestring(resourceGroup().id))]",
            "metadata": {
                "description": "PostgreSQL Server Name"
            }
        },
        "PostgreAdminLogin": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "PostgreSQL admin Login ID"
            }
        },
        "PostgreAdminLoginPassword": {
            "type": "secureString",
            "defaultValue": "RoyalInfo@123",
            "metadata": {
                "description": "PostgreSQL admin Login Password"
            }
        },
        "PostgreServerEdition": {
            "type": "string",
            "defaultValue": "Burstable",
            "metadata": {
                "description": "PostgreSQL Server Edition"
            }
        },
        "skuSizeGB": {
            "type": "int",
            "defaultValue": 128
        },
        "dbInstanceType": {
            "type": "string",
            "defaultValue": "Standard_B1ms"
        },
        "haMode": {
            "type": "string",
            "defaultValue": "Disabled"
        },
        "availabilityZone": {
            "type": "string",
            "defaultValue": "1"
        },
        "version": {
            "type": "string",
            "defaultValue": "12"
        },
        "backupRetentionDays": {
            "type": "int",
            "defaultValue": 7,
            "metadata": {
                "description": "PostgreSQL Server backup retention days"
            }
        },
        "geoRedundantBackup": {
            "type": "string",
            "defaultValue": "Disabled",
            "metadata": {
                "description": "Geo-Redundant Backup setting"
            }
        },
        "PostgreDnsZoneName": {
            "type": "string",
            "defaultValue": "postgre",
            "metadata": {
                "description": "Name for Postgre DNS Private Zone"
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "Jump-Srv",
            "metadata": {
                "description": "Specifies the name of the virtual machine."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "metadata": {
                "description": "Specifies the size of the virtual machine."
            }
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "Specifies the image publisher of the disk image used to create the virtual machine."
            }
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "Specifies the offer of the platform image or marketplace image used to create the virtual machine."
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "metadata": {
                "description": "Specifies the Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
            }
        },
        "vmAdminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "Specifies the name of the administrator account of the virtual machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Specifies the type of authentication when accessing the Virtual Machine. SSH key is recommended."
            }
        },
        "vmAdminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "Specifies the SSH Key or password for the virtual machine. SSH key is recommended."
            }
        },
        "diskStorageAccounType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GZRS",
                "Standard_RAGZRS"
            ],
            "metadata": {
                "description": "Specifies the storage account type for OS and data disk."
            }
        },
        "osDiskSize": {
            "type": "int",
            "defaultValue": 30,
            "metadata": {
                "description": "Specifies the size in GB of the OS disk of the VM."
            }
        },
        "blobStorageAccountName": {
            "type": "string",
            "defaultValue": "[concat('boot', uniquestring(resourceGroup().id))]",
            "metadata": {
                "description": "Specifies the globally unique name for the storage account used to store the boot diagnostics logs of the virtual machine."
            }
        },
        "blobStorageAccountPrivateEndpointName": {
            "type": "string",
            "defaultValue": "BlobStorageAccountPrivateEndpoint",
            "metadata": {
                "description": "Specifies the name of the private link to the boot diagnostics storage account."
            }
        }


    },
    "variables": {
        "vmSubnetNsgName": "[concat(parameters('postgresql_subnet'), 'Nsg')]",
        "bastionSubnetNsgName": "[concat(parameters('postgresql_subnet'),'Nsg')]",
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet-name'))]",
        "vmNicName": "[concat(parameters('vmName'), 'Nic')]",
        "vmNicId": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]",
        "blobStorageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('blobStorageAccountName'))]",
        "blobPublicDNSZoneForwarder": "[concat('.blob.', environment().suffixes.storage)]",
        "blobPrivateDnsZoneName": "[concat('privatelink', variables('blobPublicDNSZoneForwarder'))]",
        "blobPrivateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('blobPrivateDnsZoneName'))]",
        "blobStorageAccountPrivateEndpointGroupName": "blob",
        "blobPrivateDnsZoneGroup": "[concat(parameters('blobStorageAccountPrivateEndpointName'),'/', variables('blobStorageAccountPrivateEndpointGroupName'), 'PrivateDnsZoneGroup')]",
        "blobStorageAccountPrivateEndpointId": "[resourceId('Microsoft.Network/privateEndpoints', parameters('blobStorageAccountPrivateEndpointName'))]",
        "vnetLink": "[concat(variables('blobPrivateDnsZoneName'), '/link_to_', toLower(parameters('vnet-name')))]",
        "PostgreDnsZoneFqdn": "[format('{0}.postgres.database.azure.com', parameters('PostgreDnsZoneName'))]",

        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('vmAdminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('vmAdminPasswordOrKey')]"
                    }
                ]
            },
            "provisionVMAgent": true
        },
        "bastionPublicIpAddressName": "[concat(parameters('vmName'),'PublicIp')]"

    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-09-01",
            "name": "[parameters('vnet-name')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/natGateways', parameters('natGatewayName'))]"
            ],
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('aks-subnet')]",
                        "properties": {
                            "addressPrefix": "[parameters('aks-subnetPrefix')]",
                            "natGateway": {
                                "id": "[resourceId('Microsoft.Network/natGateways', parameters('natGatewayName'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"

                    },
                    {
                        "name": "[parameters('postgresql_subnet')]",
                        "properties": {
                            "addressPrefix": "[parameters('postgresubnetPrefix')]",
                            "natGateway": {
                                "id": "[resourceId('Microsoft.Network/natGateways', parameters('natGatewayName'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [
                                {
                                    "name": "dlg-Microsoft.DBforPostgreSQL-flexibleServers",
                                    "properties": {
                                        "serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
                                    }
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2022-09-01",
            "name": "[parameters('natGatewayPublicIpName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "type": "Microsoft.Network/natGateways",
            "apiVersion": "2022-09-01",
            "name": "[parameters('natGatewayName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('natGatewayPublicIpName'))]"
            ],
            "properties": {
                "idleTimeoutInMinutes": 4,
                "publicIpAddresses": [
                    {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('natGatewayPublicIpName'))]"
                    }
                ]
            }
        },

        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2022-12-01",
            "name": "[parameters('acrName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "Container Registry",
                "container.registry": "[parameters('acrName')]"
            },
            "sku": {
                "name": "[parameters('acrSku')]"
            },
            "properties": {
                "adminUserEnabled": "[parameters('acrAdminUserEnabled')]"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2021-06-01",
            "name": "[parameters('PostgreServerName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('dbInstanceType')]",
                "tier": "[parameters('PostgreServerEdition')]"
            },
            "properties": {
                "version": "[parameters('version')]",
                "administratorLogin": "[parameters('PostgreAdminLogin')]",
                "administratorLoginPassword": "[parameters('PostgreAdminLoginPassword')]",
                "network": {
                    "delegatedSubnetResourceId": "[format('{0}/subnets/{1}', reference(resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('PostgreDnsZoneFqdn'), parameters('vnet-name')), '2020-06-01').virtualNetwork.id, parameters('postgresql_subnet'))]",
                    "privateDnsZoneArmResourceId": "[resourceId('Microsoft.Network/privateDnsZones', variables('PostgreDnsZoneFqdn'))]"
                },
                "highAvailability": {
                    "mode": "[parameters('haMode')]"
                },
                "storage": {
                    "storageSizeGB": "[parameters('skuSizeGB')]"
                },
                "backup": {
                    "backupRetentionDays": "[parameters('backupRetentionDays')]",
                    "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
                },
                "availabilityZone": "[parameters('availabilityZone')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('PostgreDnsZoneFqdn'))]",
                "[resourceId('Microsoft.Network/privateDnsZones/virtualNetworkLinks', variables('PostgreDnsZoneFqdn'), parameters('vnet-name'))]"
            ]


        },

        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('blobPrivateDnsZoneName')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0,
                "provisioningState": "Succeeded"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('PostgreDnsZoneFqdn')]",
            "location": "global"

        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[variables('vnetLink')]",
            "location": "global",
            "dependsOn": [
                "[variables('blobPrivateDnsZoneId')]",
                "[variables('vnetId')]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[variables('vnetId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('PostgreDnsZoneFqdn'), parameters('vnet-name'))]",
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet-name'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('PostgreDnsZoneFqdn'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet-name'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-04-01",
            "name": "[parameters('blobStorageAccountPrivateEndpointName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vnetId')]",
                "[variables('blobStorageAccountId')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('blobStorageAccountPrivateEndpointName')]",
                        "properties": {
                            "privateLinkServiceId": "[variables('blobStorageAccountId')]",
                            "groupIds": [
                                "[variables('blobStorageAccountPrivateEndpointGroupName')]"
                            ]
                        }
                    }
                ],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet-name'), parameters('aks-subnet'))]"
                },
                "customDnsConfigs": [
                    {
                        "fqdn": "[concat(parameters('blobStorageAccountName'), variables('blobPublicDNSZoneForwarder'))]"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[variables('blobPrivateDnsZoneGroup')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('blobPrivateDnsZoneId')]",
                "[variables('blobStorageAccountPrivateEndpointId')]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "dnsConfig",
                        "properties": {
                            "privateDnsZoneId": "[variables('blobPrivateDnsZoneId')]"
                        }
                    }
                ]
            }
        },

        {
            "apiVersion": "2020-05-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('bastionPublicIpAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static"
            }

        },
        {
            "apiVersion": "2020-07-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('bastionSubnetNsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('blobStorageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2"
        },
        {
            "apiVersion": "2020-04-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('vmNicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vnetId')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet-name'), parameters('aks-subnet'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('bastionPublicIpAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('vmSubnetNsgName'))]"
                }
            }
        },
        {
            "apiVersion": "2020-06-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('vmNicId')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('vmAdminUsername')]",
                    "adminPassword": "[parameters('vmAdminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'),'_OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "diskSizeGB": "[parameters('osDiskSize')]",
                        "managedDisk": {
                            "storageAccountType": "[parameters('diskStorageAccounType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('vmNicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(variables('blobStorageAccountId')).primaryEndpoints['blob']]"
                    }
                }


            }
        },
        {
            "type": "Microsoft.ContainerService/managedClusters",
            "apiVersion": "2022-05-02-preview",
            "name": "[parameters('clusterName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },


            "properties": {
                "dnsPrefix": "[parameters('dnsPrefix')]",
                "sku": {
                    "name": "Basic",
                    "tier": "[parameters('aksClusterSkuTier')]"
                },
                "agentPoolProfiles": [
                    {
                        "name": "agentpool",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('AgentCountMin')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "Linux",
                        "mode": "System",
                        "minCount": "[parameters('AgentCountMin')]",
                        "maxCount": "[parameters('AgentCountMax')]",
                        "enableAutoScaling": true,
                        "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet-name'), parameters('aks-subnet'))]"

                    }
                ],

                "apiServerAccessProfile": {
                    "enablePrivateCluster": "[parameters('aksClusterEnablePrivateCluster')]"

                }
            },
            "dependsOn": [
                "[variables('vnetId')]"
            ]
        }

    ]
}
